# Анализ сложности алгоритмов

# Счетчик уникальных символов в строке
# На вход функции подается строка и функция считает сколько раз в строке встретился каждый из символов

# подключаем time, чтобы считать время выполнения программы
import time

# Создаем функцию для подсчета уникальных символов
# line - строка, с которой работаем
def count_sym(line):
    for sym in line:
        # counter - счетчик сколько раз символ встретился в строке
        counter = 0
        for sub_sym in line:
            if sym == sub_sym:
                counter += 1
        print(sym, counter)        


# Создаем функцию для подсчета уникальных символов
# set()  - это функция, возвращающая множество (это тип данных, в котором нет повторяющихся элементов)
# line - строка, с которой работаем
def count_sym_set(line):
    for sym in set(line):
        # counter - счетчик сколько раз символ встретился в строке
        counter = 0
        for sub_sym in line:
            if sym == sub_sym:
                counter += 1
        print(sym, counter) 


# замеряем время в начале работы программы
start = time.time()
# count_sym('abcdefgh' * 1000)
count_sym_set('abcdefgh' * 1000)

# замеряем время в конце работы программы
end = time.time()
print(f'Время выполнения программы: {end - start}')

